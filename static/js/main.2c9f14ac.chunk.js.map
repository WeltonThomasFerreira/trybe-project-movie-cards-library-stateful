{"version":3,"sources":["components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/SearchBar.jsx","components/TitleInput.jsx","components/SubtitleInput.jsx","components/ImageInput.jsx","components/NumberInput.jsx","components/GenreInput.jsx","components/StorylineTextArea.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","Rating","rating","this","props","data-testid","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","MovieList","movies","map","key","SearchBar","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","htmlFor","type","name","value","onChange","checked","TitleInput","initialState","event","SubtitleInput","ImageInput","NumberInput","StorylineTextArea","cols","rows","AddMovie","state","genre","onClick","setState","target","GenreInput","MovieLibrary","filterCard","bind","addNewMovie","filter","card","toLowerCase","includes","bookmarked","preventDefault","App","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c9f14ac.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 'undefined',\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends Component {\n  render() {\n    const {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange,\n    } = this.props;\n\n    return (\n      <form data-testid=\"search-bar-form\">\n        <label htmlFor=\"text-input\" data-testid=\"text-input-label\">\n          Inclui o texto:\n          <input\n            type=\"text\"\n            name=\"text-input\"\n            data-testid=\"text-input\"\n            value={ searchText }\n            onChange={ onSearchTextChange }\n          />\n        </label>\n        <label htmlFor=\"checkbox-input\" data-testid=\"checkbox-input-label\">\n          Mostrar somente favoritos\n          <input\n            type=\"checkbox\"\n            name=\"checkbox-input\"\n            data-testid=\"checkbox-input\"\n            checked={ bookmarkedOnly }\n            onChange={ onBookmarkedChange }\n          />\n        </label>\n        <label htmlFor=\"select-input\" data-testid=\"select-input-label\">\n          Filtrar por gênero\n          <select\n            name=\"select-input\"\n            data-testid=\"select-input\"\n            value={ selectedGenre }\n            onChange={ onSelectedGenreChange }\n          >\n            <option value=\"\" data-testid=\"select-option\">Todos</option>\n            <option value=\"action\" data-testid=\"select-option\">Ação</option>\n            <option value=\"comedy\" data-testid=\"select-option\">Comédia</option>\n            <option value=\"thriller\" data-testid=\"select-option\">Suspense</option>\n          </select>\n        </label>\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TitleInput extends Component {\n  render() {\n    const { initialState, onChange } = this.props;\n    return (\n      <label htmlFor=\"title-input\" data-testid=\"title-input-label\">\n        Título\n        <input\n          type=\"text\"\n          data-testid=\"title-input\"\n          value={ initialState }\n          onChange={ (event) => {\n            onChange(event);\n          } }\n        />\n      </label>\n    );\n  }\n}\n\nTitleInput.propTypes = {\n  initialState: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TitleInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SubtitleInput extends Component {\n  render() {\n    const { initialState, onChange } = this.props;\n    return (\n      <label htmlFor=\"subtitle-input\" data-testid=\"subtitle-input-label\">\n        Subtítulo\n        <input\n          type=\"text\"\n          data-testid=\"subtitle-input\"\n          value={ initialState }\n          onChange={ (event) => {\n            onChange(event);\n          } }\n        />\n      </label>\n    );\n  }\n}\n\nSubtitleInput.propTypes = {\n  initialState: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SubtitleInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ImageInput extends Component {\n  render() {\n    const { initialState, onChange } = this.props;\n    return (\n      <label htmlFor=\"image-input\" data-testid=\"image-input-label\">\n        Imagem\n        <input\n          type=\"text\"\n          data-testid=\"image-input\"\n          value={ initialState }\n          onChange={ (event) => {\n            onChange(event);\n          } }\n        />\n      </label>\n    );\n  }\n}\n\nImageInput.propTypes = {\n  initialState: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ImageInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NumberInput extends Component {\n  render() {\n    const { initialState, onChange } = this.props;\n    return (\n      <label htmlFor=\"rating-input\" data-testid=\"rating-input-label\">\n        Avaliação\n        <input\n          type=\"number\"\n          data-testid=\"rating-input\"\n          value={ initialState }\n          onChange={ (event) => {\n            onChange(event);\n          } }\n        />\n      </label>\n    );\n  }\n}\n\nNumberInput.propTypes = {\n  initialState: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default NumberInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TitleInput extends Component {\n  render() {\n    const { initialState, onChange } = this.props;\n    return (\n      <label htmlFor=\"genre-input\" data-testid=\"genre-input-label\">\n        Gênero\n        <select\n          data-testid=\"genre-input\"\n          value={ initialState }\n          onChange={ (event) => {\n            onChange(event);\n          } }\n        >\n          <option value=\"action\" data-testid=\"genre-option\">\n            Ação\n          </option>\n          <option value=\"comedy\" data-testid=\"genre-option\">\n            Comédia\n          </option>\n          <option value=\"thriller\" data-testid=\"genre-option\">\n            Suspense\n          </option>\n        </select>\n      </label>\n    );\n  }\n}\n\nTitleInput.propTypes = {\n  initialState: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TitleInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StorylineTextArea extends Component {\n  render() {\n    const { initialState, onChange } = this.props;\n    return (\n      <label htmlFor=\"storyline-input\" data-testid=\"storyline-input-label\">\n        Sinopse\n        <textarea\n          data-testid=\"storyline-input\"\n          cols=\"30\"\n          rows=\"10\"\n          value={ initialState }\n          onChange={ (event) => {\n            onChange(event);\n          } }\n        />\n      </label>\n    );\n  }\n}\n\nStorylineTextArea.propTypes = {\n  initialState: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default StorylineTextArea;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleInput from './TitleInput';\nimport SubtitleInput from './SubtitleInput';\nimport ImageInput from './ImageInput';\nimport NumberInput from './NumberInput';\nimport GenreInput from './GenreInput';\nimport StorylineTextArea from './StorylineTextArea';\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n  }\n\n  render() {\n    const { onClick } = this.props;\n    const { title, subtitle, imagePath, storyline, rating, genre } = this.state;\n    return (\n      <form data-testid=\"add-movie-form\">\n        <TitleInput\n          initialState={ title }\n          onChange={ (event) => this.setState({ title: event.target.value }) }\n        />\n        <SubtitleInput\n          initialState={ subtitle }\n          onChange={ (event) => this.setState({ subtitle: event.target.value }) }\n        />\n        <ImageInput\n          initialState={ imagePath }\n          onChange={ (event) => this.setState({ imagePath: event.target.value }) }\n        />\n        <StorylineTextArea\n          initialState={ storyline }\n          onChange={ (event) => this.setState({ storyline: event.target.value }) }\n        />\n        <NumberInput\n          initialState={ rating }\n          onChange={ (event) => this.setState({ rating: event.target.value }) }\n        />\n        <GenreInput\n          initialState={ genre }\n          onChange={ (event) => this.setState({ genre: event.target.value }) }\n        />\n        <button\n          type=\"submit\"\n          data-testid=\"send-button\"\n          onClick={ (event) => {\n            onClick(event, this.state);\n            this.setState({\n              subtitle: '',\n              title: '',\n              imagePath: '',\n              storyline: '',\n              rating: 0,\n              genre: 'action',\n            });\n          } }\n        >\n          Adicionar filme\n        </button>\n      </form>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: props.movies,\n    };\n    this.filterCard = this.filterCard.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n  }\n\n  // Referência: https://github.com/michaelcaxias\n  // src: https://github.com/tryber/sd-014-b-project-movie-cards-library-stateful/blob/9bf92067661b4cf3605d39e82cadb91ced8fd1fb/src/components/MovieLibrary.jsx\n  filterCard() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    if (searchText !== '') {\n      return movies.filter(\n        (card) => card.title.toLowerCase().includes(searchText.toLowerCase())\n          || card.subtitle.toLowerCase().includes(searchText.toLowerCase())\n          || card.storyline.toLowerCase().includes(searchText.toLowerCase()),\n      );\n    }\n    if (selectedGenre !== '') {\n      return movies.filter((card) => card.genre === selectedGenre);\n    }\n    if (bookmarkedOnly) {\n      return movies.filter((card) => card.bookmarked === bookmarkedOnly);\n    }\n    return movies;\n  }\n\n  addNewMovie(event, state) {\n    event.preventDefault();\n    const { movies } = this.props;\n    this.setState({\n      movies: [...movies, state],\n    });\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    return (\n      <div>\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          searchText={ searchText }\n          onSearchTextChange={ (event) => {\n            this.setState({ searchText: event.target.value });\n          } }\n          bookmarkedOnly={ bookmarkedOnly }\n          onBookmarkedChange={ (event) => {\n            this.setState({ bookmarkedOnly: event.target.checked });\n          } }\n          selectedGenre={ selectedGenre }\n          onSelectedGenreChange={ (event) => {\n            this.setState({ selectedGenre: event.target.value });\n          } }\n        />\n        <MovieList movies={ this.filterCard() } />\n        <AddMovie onClick={ this.addNewMovie } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\nimport data from './data';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ data } />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}